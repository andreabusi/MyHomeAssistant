# Alexa, announce a generic messag on media players
alexa_announce:
  alias: 'Announce a message on Alexa'
  sequence:
    - alias: "Check for non disturb mode"
      condition: state
      entity_id: input_boolean.do_not_disturb
      state: 'off'
    - service: notify.alexa_media
      data_template:
        message: "{{ message }}"
        data:
          type: announce
          method: spoken
        target: 
          - media_player.echo_soggiorno
          - media_player.echo_dot_cameretta
          - media_player.echo_dot_taverna

# Alexa, announce home recycling for tomorrow
alexa_home_recycling:
  alias: 'Announce home recycling on Alexa'
  sequence:
    - service: script.alexa_announce
      data_template:
        message: >
          {% set collections = state_attr("sensor.home_recycling", "collections") %}
            {% if collections|length == 0 %}
              Non c'è nessuna spazzatura in ritiro domani.
            {% else %}
              La spazzatura in ritiro domani è {{ collections|join(" e ") }}
          {% endif %}

# Turn the Christmas Tree on and play Jingle Bells using Google Home (via IFTTT)
christmasspirit_googlehome_on:
  alias: 'Turn the Christmas Tree on from Google Home'
  sequence:
    - service: ifttt.trigger
      data:
        event: jarvis_sonoff01_turnon
    - service: homeassistant.turn_on
      entity_id: switch.sonoff_10001f9bcf
    - service: script.turn_on
      entity_id: script.play_jingle_bells

# Play Jingle Bells on Google Home
play_jingle_bells:
  alias: 'Play Jingle Bells'
  sequence:
    - service: media_player.turn_on
      entity_id: media_player.google_home_salotto
    - service: media_player.play_media
      data:
        entity_id: media_player.google_home_salotto
        media_content_id: !secret www_music_jinglebells
        media_content_type: audio/mp3

# Turn on Libro light and turn off after 10 minutes
libro_light_cat_feed:
  alias: 'Turn on Libro light for 10 minutes, to allow cat dinner'
  sequence:
    - service: light.turn_on
      entity_id: light.book_lamp
    - delay: 0:10
    - service: light.turn_off
      entity_id: light.book_lamp  

# Remote - TV Cucina
tv_cucina_power_on:
  sequence:
    - condition: state
      entity_id: switch.tv_cucina
      state: 'off'
    - service: remote.send_command
      entity_id: remote.xiaomi_ir_remote
      data:
        command:
          - 'tv_cucina_power'

tv_cucina_power_off:
  sequence:
    - condition: state
      entity_id: switch.tv_cucina
      state: 'on'
    - service: remote.send_command
      entity_id: remote.xiaomi_ir_remote
      data:
        command:
          - 'tv_cucina_power'

tv_cucina_volume_up:
  sequence:
    - service: remote.send_command
      entity_id: 'remote.xiaomi_ir_remote'
      data:
        command:
          - 'tv_cucina_volume_up'

tv_cucina_volume_down:
  sequence:
    - service: remote.send_command
      entity_id: 'remote.xiaomi_ir_remote'
      data:
        command:
          - 'tv_cucina_volume_down'

tv_cucina_mute:
  sequence:
    - service: remote.send_command
      entity_id: 'remote.xiaomi_ir_remote'
      data:
        command:
          - 'tv_cucina_mute'

tv_cucina_channel_up:
  sequence:
    - service: remote.send_command
      entity_id: 'remote.xiaomi_ir_remote'
      data:
        command:
          - 'tv_cucina_channel_up'
        
tv_cucina_channel_down:
  sequence:
    - service: remote.send_command
      entity_id: 'remote.xiaomi_ir_remote'
      data:
        command:
          - 'tv_cucina_channel_down'

tv_cucina_change_source:
  sequence:
    - service: remote.send_command
      entity_id: 'remote.xiaomi_ir_remote'
      data:
        command:
          - 'tv_cucina_change_source'

# Remote - TV Sala
tv_sala_power_on:
  sequence:
    - condition: state
      entity_id: switch.tv_sala
      state: 'off'
    - service: remote.send_command
      entity_id: remote.xiaomi_ir_remote
      data:
        command:
          - 'tv_sala_power'

tv_sala_power_off:
  sequence:
    - condition: state
      entity_id: switch.tv_sala
      state: 'on'
    - service: remote.send_command
      entity_id: remote.xiaomi_ir_remote
      data:
        command:
          - 'tv_sala_power'

tv_sala_volume_up:
  sequence:
    - service: remote.send_command
      entity_id: 'remote.xiaomi_ir_remote'
      data:
        command:
          - 'tv_sala_volume_up'

tv_sala_volume_down:
  sequence:
    - service: remote.send_command
      entity_id: 'remote.xiaomi_ir_remote'
      data:
        command:
          - 'tv_sala_volume_down'

tv_sala_mute:
  sequence:
    - service: remote.send_command
      entity_id: 'remote.xiaomi_ir_remote'
      data:
        command:
          - 'tv_sala_mute'

tv_sala_channel_up:
  sequence:
    - service: remote.send_command
      entity_id: 'remote.xiaomi_ir_remote'
      data:
        command:
          - 'tv_sala_channel_up'
        
tv_sala_channel_down:
  sequence:
    - service: remote.send_command
      entity_id: 'remote.xiaomi_ir_remote'
      data:
        command:
          - 'tv_sala_channel_down'

tv_sala_home_button:
  sequence:
    - service: remote.send_command
      entity_id: 'remote.xiaomi_ir_remote'
      data:
        command:
          - 'tv_sala_home_button'

tv_sala_center_button:
  sequence:
    - service: remote.send_command
      entity_id: 'remote.xiaomi_ir_remote'
      data:
        command:
          - 'tv_sala_center_button'

tv_sala_right_button:
  sequence:
    - service: remote.send_command
      entity_id: 'remote.xiaomi_ir_remote'
      data:
        command:
          - 'tv_sala_right_button'

tv_sala_left_button:
  sequence:
    - service: remote.send_command
      entity_id: 'remote.xiaomi_ir_remote'
      data:
        command:
          - 'tv_sala_left_button'

tv_sala_open_amazon_video:
  sequence:
    - service: script.turn_on
      entity_id: script.tv_sala_power_on
    - delay:
        seconds: 2
    - service: script.turn_on
      entity_id: script.tv_sala_home_button
    - delay:
        seconds: 2
    - service: script.turn_on
      entity_id: script.tv_sala_right_button
    - delay:
        milliseconds: 500
    - service: script.turn_on
      entity_id: script.tv_sala_right_button
    - delay:
        milliseconds: 500
    - service: script.turn_on
      entity_id: script.tv_sala_right_button
    - delay:
        milliseconds: 500
    - service: script.turn_on
      entity_id: script.tv_sala_center_button

# Xiaomi Robot room cleaning
vacuum_sleeping_area:
  alias: "Clean the sleeping area"
  sequence:
    - service: vacuum.send_command
      data:
        entity_id: vacuum.mi_roborock
        command: app_segment_clean
        params: [16, 19, 20]

vacuum_living_area:
  alias: "Clean the living area"
  sequence:
    - service: vacuum.send_command
      data:
        entity_id: vacuum.mi_roborock
        command: app_segment_clean
        params: [17, 18]

vacuum_living:
  alias: "Clean living only"
  sequence:
    - service: vacuum.send_command
      data:
        entity_id: vacuum.mi_roborock
        command: app_segment_clean
        params: [17]

vacuum_kitchen:
  alias: "Clean kitchen only"
  sequence:
    - service: vacuum.send_command
      data:
        entity_id: vacuum.mi_roborock
        command: app_segment_clean
        params: [18]

vacuum_bathroom:
  alias: "Clean the bathroom"
  sequence:
    - service: vacuum.send_command
      data:
        entity_id: vacuum.mi_roborock
        command: app_segment_clean
        params: [21]

# Goodnight automation
goodnight_turnoff:
  sequence:
    - service: light.turn_off
      entity_id: light.lampada_sala
    - service: light.turn_off
      entity_id: light.book_lamp
    - service: script.turn_on
      entity_id: script.tv_sala_power_off
    - service: script.turn_on
      entity_id: script.tv_cucina_power_off
