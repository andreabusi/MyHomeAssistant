# RaspberryPi system monitoring
- platform: systemmonitor
  resources:
    - type: last_boot
    - type: memory_use_percent
    - type: processor_use

# Darksky meteo
- platform: darksky
  api_key: !secret darksky_key
  forecast:
    - 0
  monitored_conditions:
    - summary
    - icon
    - temperature
    - humidity
    - temperature_high
    - temperature_low
    - precip_probability
  language: it
  scan_interval: '01:00'

- platform: command_line
  name: tasmota_last_firmware
  command: "curl -s 'https://api.github.com/repositories/80286288/tags' | jq -r '.[0].name' | cut -c2-"
  scan_interval: 86400 # once a day

# Template sensors
- platform: template
  sensors:
    fw_update_shelly_8caab505510c:
      value_template: >-
        {{ states.update.shelly1_8caab505510c_firmware_update.state }} 
      icon_template: >-
        {% if is_state('update.shelly1_8caab505510c_firmware_update', 'off') %}
          mdi:cloud-outline
        {% else %}
          mdi:cloud-download
        {% endif %}
    fw_update_shelly_8caab5060cb7:
      value_template: >-
        {{ states.update.shelly1_8caab5060cb7_firmware_update.state }} 
      icon_template: >-
        {% if is_state('update.shelly1_8caab5060cb7_firmware_update', 'off') %}
          mdi:cloud-outline
        {% else %}
          mdi:cloud-download
        {% endif %}
    fw_update_shelly_f431b1:
      value_template: >-
        {{ states.update.shelly1_f431b1_firmware_update.state }} 
      icon_template: >-
        {% if is_state('update.shelly1_f431b1_firmware_update', 'off') %}
          mdi:cloud-outline
        {% else %}
          mdi:cloud-download
        {% endif %}
    fw_update_gosund_presa01:
      value_template: >-
        {{ state_attr("sensor.gosund_presa01_status", "Version") | replace("(tasmota)", "") }}
      icon_template: >-
        {% if states.sensor.fw_update_gosund_presa01.state == states.sensor.tasmota_last_firmware.state %}
          mdi:cloud-outline
        {% else %}
          mdi:cloud-download
        {% endif %}
    fw_update_gosund_presa02:
      value_template: >-
        {{ state_attr("sensor.gosund_presa02_status", "Version") | replace("(tasmota)", "") }}
      icon_template: >-
        {% if states.sensor.fw_update_gosund_presa02.state == states.sensor.tasmota_last_firmware.state %}
          mdi:cloud-outline
        {% else %}
          mdi:cloud-download
        {% endif %}
    home_assistant_installed:
      value_template: >-
        {{ states.sensor.ha_installed_version.state }} 
      icon_template: >-
        {% if states.sensor.ha_installed_version.state == states.sensor.ha_upstream_version.state %}
          mdi:cloud-check
        {% else %}
          mdi:cloud-upload
        {% endif %}
    home_recycling_types:
      value_template: >-
        {% set collections = state_attr("sensor.home_recycling", "collections") %}
          {% if collections is none or collections|length == 0 %}
            n.r
          {% else %}
            {{ collections|join(", ") }}
        {% endif %}
    home_recycling_date:
      value_template: >-
        {{ state_attr("sensor.home_recycling", "pickup_date") }}
    forecast_temperatures:
      value_template: >-
        {{ states.sensor.dark_sky_daytime_high_temperature_0d.state_with_unit }} / {{ states.sensor.dark_sky_overnight_low_temperature_0d.state_with_unit }}
    forecast_today_summary:
      value_template: >-
        {{  states.sensor.dark_sky_summary.state }}
      icon_template: >-
        {% if is_state("sensor.dark_sky_icon", "clear-day") %}
          mdi:weather-sunny
        {% elif is_state("sensor.dark_sky_icon", "clear-night") %}
          mdi:weather-night
        {% elif is_state("sensor.dark_sky_icon", "cloudy") %}
          mdi:weather-cloudy
        {% elif is_state("sensor.dark_sky_icon", "rain") %}
          mdi:weather-pouring
        {% elif is_state("sensor.dark_sky_icon", "sleet") %}
          mdi:weather-snowy-rain
        {% elif is_state("sensor.dark_sky_icon", "snow") %}
          mdi:weather-snowy
        {% elif is_state("sensor.dark_sky_icon", "wind") %}
          mdi:weather-windy
        {% elif is_state("sensor.dark_sky_icon", "fog") %}
          mdi:weather-fog
        {% elif is_state("sensor.dark_sky_icon", "partly-cloudy-day") %}
          mdi:weather-partly-cloudy
        {% elif is_state("sensor.dark_sky_icon", "partly-cloudy-night") %}
          mdi:weather-night-partly-cloudy
        {% else %}
          error
        {% endif %}

- platform: template
  sensors:
    mi_b_582d343415fe:
      unit_of_measurement: "%"
      value_template: "{{ state_attr('sensor.mi_h_582d343415fe', 'battery_level') }}"
      device_class: battery
