# Gestione spazzatura
- id: 'home_recycling_notify'
  alias: Recycling, evening notification
  initial_state: true
  trigger:
  - at: '20:00'
    platform: time
  condition:
    condition: state
    entity_id: sensor.home_recycling
    state: 'on'
  action:
    - service: notify.home_tg
      data_template:
        message: >
          La spazzatura in ritiro domani Ã¨:{{'\n'}}
          {%- for collection in state_attr("sensor.home_recycling", "collections_icons") -%}
            {{- collection }}{{'\n'}}
          {%- endfor %}
    - service: script.alexa_announce
      data_template:
        message: >
          La spazzatura in ritiro domani Ã¨ {{ state_attr("sensor.home_recycling", "collections")|join(" e ") }}

- id: 'home_recycling_set_states'
  alias: Recycling, set states
  initial_state: true
  trigger:
    - platform: time
      at: '07:00'
    - platform: homeassistant
      event: start
  condition: []
  action:
  - service: home_recycling.collections_state

# Download MagPi issues
- id: 'magpi_downloader_check'
  alias: MagPi, check and download
  initial_state: true
  trigger:
  - at: '08:00'
    platform: time  
  condition: []
  action:
  - service: magpi_downloader.downloader

# HomeAssistant notifications
- id: 'ha_check_update'
  alias: HomeAssistant, check available update
  initial_state: true
  trigger:
  - entity_id: sensor.ha_upstream_version
    platform: state  
  condition:
  - condition: template
    value_template: "{{ trigger.to_state.state != 'unknown' }}"
  - condition: template
    value_template: "{{ trigger.to_state.state != 'unavailable' }}"
  - condition: template
    value_template: "{{ trigger.to_state.state != states.sensor.ha_installed_version.state }}"
  action:
  - service: notify.pushover
    data_template:
      title: Home Assistant
      message: Update {{ trigger.to_state.state }} is available for Home Assistant!
      data:
        url: "https://github.com/home-assistant/home-assistant/releases/tag/{{ trigger.to_state.state }}"
    
- id: 'ha_startup'
  alias: HomeAssistant, started notification
  initial_state: true
  trigger:
  - event: start
    platform: homeassistant
  condition: []
  action:
  - data:
      title: Home Assistant
      message: Home Assistant has been restarted, now it's up and running!
    service: notify.pushover

# Turn off Christmas Tree ad 01 am
- id: 'christmas_tree_auto_turnoff'
  alias: 'Christmas Tree: turn off at 01:00 am'
  initial_state: true
  trigger:
  - platform: time
    at: '01:00:00'
  condition: []
  action:
  - service: homeassistant.turn_off
    entity_id: switch.sonoff_10001f9bcf
  
# JarvisBOT: comandi Telegram a cui Jarvis puÃ² rispondere
- id: 'jarvisbot_ping'
  alias: 'JarvisBOT: /ping'
  trigger:
  - platform: event
    event_type: telegram_command
    event_data:
      command: '/ping'
  action:
  - service: telegram_bot.send_message
    data_template:
      target: '{{ trigger.event.data.chat_id }}'
      message: 'Pong!'

- id: 'jarvisbot_temperature'
  alias: 'JarvisBOT: /temperature'
  trigger:
  - platform: event
    event_type: telegram_command
    event_data:
      command: '/temperature'
  action:
  - service: telegram_bot.send_message
    data_template:
      target: '{{ trigger.event.data.chat_id }}'
      message: 'La temperatura corrente Ã¨ di {{ states.sensor.dht_sensor_temperature.state_with_unit }}'

- id: 'jarvisbot_camera_picture'
  alias: 'JarvisBOT: /camera'
  trigger:
  - platform: event
    event_type: telegram_command
    event_data:
      command: '/camera'
  action:
  - service: telegram_bot.send_photo
    data:
      url: http://127.0.0.1/api/camera_proxy/camera.soggiorno
      caption: 'Situazione attuale del soggiorno'

- id: 'jarvisbot_hello'
  alias: 'JarvisBOT: /hello'
  trigger:
  - platform: event
    event_type: telegram_text
    event_data:
      text: 'Jarvis'
  - platform: event
    event_type: telegram_command
    event_data:
      command: '/hello'
  action:
  - service: telegram_bot.send_message
    data_template:
      target: '{{ trigger.event.data.chat_id }}'
      message: 'Ciao {{ trigger.event.data.from_first }}!'

# Washing machine finished
- id: 'washing_machine_finished'
  alias: 'Washing machine finished, let Alexa announce it'
  trigger:
    platform: state
    entity_id: binary_sensor.washing_machine_status
    to: 'off'
  action:
    - service: script.alexa_announce
      data:
        message: "La lavatrice ha finito."

# Dryer machine finished
- id: 'dryer_machine_finished'
  alias: 'Dryer machine finished, let Alexa announce it'
  trigger:
    platform: state
    entity_id: binary_sensor.dryer_machine_status
    to: 'off'
  action:
    - service: script.alexa_announce
      data:
        message: "L'asciugatrice ha finito."

# IFTTT
- id: 'ifttt_webhook'
  alias: IFTTT, handle incoming webhooks
  initial_state: true
  trigger:
  - platform: event
    event_type: ifttt_webhook_received
    event_data:
      action: call_service
  condition: []
  action:
  - service: '{{ trigger.event.data.service }}'
    data:
      entity_id: '{{ trigger.event.data.entity_id }}'

# Force enable discovery on Tasmota devices
- id: 'mqtt_enable_discovery'
  alias: "Enable discovery on MQTT for Tasmota devices"
  trigger:
    - platform: homeassistant
      event: start
    - platform: time
      at: '01:00'
  action:
    - service: mqtt.publish
      data:
        topic: "tasmotas/cmnd/SetOption19"
        payload: "1"

# Turn on/off external lights based of the sun
- id: 'sunset_external_lights'
  alias: 'Turn on external lights after the sunset'
  trigger:
    - platform: sun
      event: sunset
      offset: "00:00:00"
  action:
    - service: homeassistant.turn_on
      entity_id: group.lights_external

- id: 'sunrise_external_lights'
  alias: 'Turn off external lights after the sunrise'
  trigger:
    - platform: sun
      event: sunrise
  action:
    - service: homeassistant.turn_off
      entity_id: group.lights_external

# Play an alarm message is a leak is detected in the laudry
- id: 'waterflood_laundry_alarm'
  alias: 'Play an alarm message on all the speakers if a leak is detected'
  trigger:
    platform: state
    entity_id: input_boolean.waterflood_laundry
    to: 'on'
  action:
    - service: script.alexa_announce
      data:
        message: "Attenzione! Attenzione! La lavanderia si sta allagando!"
    - service: notify.home_tg
      data:
        message: "ðŸš¨ Possibile allagamento in lavanderia!!"

# Turn on/off Do Not Disturb Mode
- id: 'do_not_disturb_off'
  alias: 'Turn off do not disturb mode'
  trigger:
    - platform: time
      at: '08:00:00'
  action:
    - service: homeassistant.turn_off
      entity_id: input_boolean.do_not_disturb

- id: 'do_not_disturb_on'
  alias: 'Turn on do not disturb mode'
  trigger:
    - platform: time
      at: '23:00:00'
  action:
    - service: homeassistant.turn_on
      entity_id: input_boolean.do_not_disturb
